<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>DataTable con JSON y Botón de Edición</title>
    <link rel="stylesheet" href="css/w3.css">
    <script src="css/sweetalert2.all.min.js"></script>
    <style>

    </style>
</head>
<body>
    <h1>Tabla con Datos de un JSON</h1>
    <table id="data-table" class="w3-table-all">
        <thead>
            <tr>
                <th>ID</th>
                <th>Nombre</th>
                <th>Correo Electrónico</th>
                <th>Acción</th>
            </tr>
        </thead>
        <tbody>
        </tbody>
    </table>

    <script>
        // Ejemplo de datos en formato JSON
        const jsonData = [
            { id: 1, nombre: "Juan Pérez", correo: "juan.perez@example.com" },
            { id: 2, nombre: "Maria López", correo: "maria.lopez@example.com" },
            { id: 3, nombre: "Carlos Sánchez", correo: "carlos.sanchez@example.com" }
        ];

        // Función para cargar los datos en la tabla
        function cargarDatosEnTabla() {
            const tbody = document.querySelector("#data-table tbody");
            tbody.innerHTML = ""; // Limpiar el contenido existente

            jsonData.forEach((registro) => {
                const fila = document.createElement("tr");

                fila.innerHTML = `
                    <td>${registro.id}</td>
                    <td>${registro.nombre}</td>
                    <td>${registro.correo}</td>
                    <td><button 
                        class="w3-button w3-teal w3-round"
                        onclick="editarRegistro(${registro.id})">Editar</button
                    ></td>
                `;

                tbody.appendChild(fila);
            });
        }

        // Función para editar el registro
        function editarRegistro(id) {
            // alert(`Editar registro con ID: ${id}`);
            // Aquí puedes agregar lógica para editar el registro
            Swal.fire({
                title: "Nuevo valor para el SM",
                input: "text",
                inputAttributes: {
                    autocapitalize: "off"
                },
                showCancelButton: true,
                confirmButtonText: "Guardar",
                showLoaderOnConfirm: true,
                preConfirm: async (login) => {
                    try {
                        const githubUrl = `
                            /tabulador/update/${id}/${login}
                        `
                        const response = await fetch(githubUrl,{
                            method: "PUT"
                        });
                        if (!response.ok) {
                            return Swal.showValidationMessage(`
                                ${JSON.stringify(await response.json())}
                            `);
                        }
                        return response.json();
                    } catch (error) {
                        Swal.showValidationMessage(`
                            Request failed: ${error}
                        `);
                    }
                },
                allowOutsideClick: () => !Swal.isLoading()
            })
            .then((result) => {
                if (result.isConfirmed) {
                        console.log("result",result.value)
                        Swal.fire({
                        title: `${result.value.message}'`
                    });
                    // cargarDatosEnTabla()
                }
            });
        }

        // Cargar datos al cargar la página
        document.addEventListener("DOMContentLoaded", cargarDatosEnTabla);
    </script>
</body>
</html>